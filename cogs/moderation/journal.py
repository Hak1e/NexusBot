import disnake
from disnake.ext import commands
from core.bot import Nexus
import asyncpg
from models.button_view import PageButtons
from typing import Optional
import datetime


class Journal(commands.Cog):
    def __init__(self, bot: Nexus):
        self.bot = bot
        self.pool: asyncpg.Pool = self.bot.get_pool()

    @commands.slash_command()
    async def journal_show(self, ctx: disnake.CommandInteraction,
                           user: disnake.User, ephemeral: Optional[bool] = False):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∂—É—Ä–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Parameters
        ----------
        ctx: disnake.CommandInteraction
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        ephemeral: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ñ–µ–º–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É False
        """
        query = "SELECT notes " \
                "FROM journal " \
                "WHERE guild_id = $1 and user_id = $2"
        notes = await self.pool.fetchval(query, ctx.guild.id, user.id)
        if not notes:
            empty_embed = disnake.Embed(title=f"–ó–∞–º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}", description="–ó–∞–º–µ—Ç–æ–∫ –Ω–µ—Ç",
                                        color=disnake.Color.blurple())
            buttons = PageButtons([])
            await ctx.send(embed=empty_embed, ephemeral=ephemeral,
                           view=buttons)
            return

        pages = []
        items_per_page = 10
        counter = 1
        for item_index in range(0, len(notes), items_per_page):
            page_notes = notes[item_index:item_index + items_per_page]
            page = disnake.Embed(title=f"–ó–∞–º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}", color=disnake.Color.blurple())
            for note in page_notes:
                page.add_field(name="", value=f"`#{counter}` {note}",
                               inline=False)
                counter += 1
            pages.append(page)

        buttons = PageButtons(pages)
        await ctx.send(embed=pages[0], view=buttons,
                       ephemeral=ephemeral)

    @commands.slash_command()
    async def journal_add(self, ctx: disnake.CommandInteraction,
                          user: disnake.User, note: str):
        """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∂—É—Ä–Ω–∞–ª

        Parameters
        ----------
        ctx: disnake.CommandInteraction
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        note: –ó–∞–º–µ—Ç–∫–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        """
        time = datetime.datetime.now(datetime.timezone.utc)
        note = f"<t:{int(time.timestamp())}:d>: üí¨ **–û—Ç <@{ctx.author.id}>:** {note}"
        query = ("INSERT INTO journal (guild_id, user_id, notes) "
                 "VALUES ($1, $2, ARRAY[$3]) "
                 "ON CONFLICT (guild_id, user_id) DO UPDATE "
                 "SET notes = array_append(journal.notes, $3)")
        await self.pool.execute(query, ctx.guild.id,
                                user.id, note)

        query = ("SELECT channel_id "
                 "FROM journal_logs "
                 "WHERE guild_id = $1")
        channel_id = await self.pool.fetchval(query, ctx.guild.id)
        if channel_id:
            log = disnake.Embed(title="–ó–∞–º–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞", color=disnake.Color.green(),
                                description=f"{ctx.author.mention} —Å–æ–∑–¥–∞–ª(–∞) –∑–∞–º–µ—Ç–∫—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user.mention}:\n"
                                            f"{note}")
            log_channel = ctx.guild.get_channel(channel_id)
            await log_channel.send(embed=log)

        embed = disnake.Embed(title="", description=f"–ó–∞–º–µ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –¥–æ–±–∞–≤–ª–µ–Ω–∞:\n{note}",
                              color=disnake.Color.green())
        await ctx.send(embed=embed, ephemeral=True)

    @commands.slash_command()
    async def journal_edit(self, ctx: disnake.CommandInteraction,
                           user: disnake.User, number: int,
                           note: str):
        """–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–º–µ—Ç–∫—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ

        Parameters
        ----------
        ctx: disnake.CommandInteraction
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        number: –ù–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏
        note: –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞
        """
        get_note = ("SELECT notes[$3] "
                    "FROM journal "
                    "WHERE guild_id = $1 and user_id = $2")
        old_note = await self.pool.fetchval(get_note, ctx.guild.id,
                                            user.id, number)

        query = ("SELECT notes[$3] "
                 "FROM journal "
                 "WHERE guild_id = $1 and user_id = $2")
        db_note = await self.pool.fetchval(query, ctx.guild.id,
                                           user.id, number)

        note_chunks = db_note.split(" ")
        new_note = f"{' '.join(note_chunks[0:4])} {note} (*–∏–∑–º–µ–Ω–µ–Ω–æ*)"

        query = ("UPDATE journal "
                 "SET notes[$3] = $4 "
                 "WHERE guild_id = $1 and user_id = $2")
        await self.pool.execute(query, ctx.guild.id,
                                user.id, number, new_note)

        query = ("SELECT channel_id "
                 "FROM journal_logs "
                 "WHERE guild_id = $1")
        channel_id = await self.pool.fetchval(query, ctx.guild.id)
        if channel_id:
            log = disnake.Embed(title="–ó–∞–º–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞", color=disnake.Color.blurple(),
                                description=f"{ctx.author.mention} –∏–∑–º–µ–Ω–∏–ª(–∞) –∑–∞–º–µ—Ç–∫—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user.mention}:\n"
                                            f"–°—Ç–∞—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞:\n{old_note}\n"
                                            f"–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞:\n{new_note}")
            log_channel = ctx.guild.get_channel(channel_id)
            await log_channel.send(embed=log)

        embed = disnake.Embed(title="", description=f"–ó–∞–º–µ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –∏–∑–º–µ–Ω–µ–Ω–∞:\n"
                                                    f"–°—Ç–∞—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞:\n{old_note}\n"
                                                    f"–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞:\n{new_note}",
                              color=disnake.Color.green())
        await ctx.send(embed=embed, ephemeral=True)

    @commands.slash_command()
    async def journal_remove(self, ctx: disnake.CommandInteraction,
                             user: disnake.User, numbers: str):
        """–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É/–∑–∞–º–µ—Ç–∫–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ

        Parameters
        ----------
        ctx: disnake.CommandInteraction
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        numbers: –ù–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
        """
        notes_number = [f"`#{number}`" for number in numbers.split()]

        get_notes = ("SELECT notes "
                     "FROM journal "
                     "WHERE guild_id = $1 and user_id = $2")
        notes = await self.pool.fetchval(get_notes, ctx.guild.id, user.id)
        indexes = list(map(int, numbers.split()))
        indexes = [number - 1 for number in indexes]
        new_notes = []
        deleted_notes = []
        for index, note in enumerate(notes):
            if index not in indexes:
                new_notes.append(note)
            else:
                deleted_notes.append(note)

        update_notes = ("UPDATE journal "
                        "SET notes = $3 "
                        "WHERE guild_id = $1 and user_id = $2")
        await self.pool.execute(update_notes, ctx.guild.id, user.id, new_notes)

        query = ("SELECT channel_id "
                 "FROM journal_logs "
                 "WHERE guild_id = $1")
        channel_id = await self.pool.fetchval(query, ctx.guild.id)
        if channel_id:
            log = disnake.Embed(title="–ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞", color=disnake.Color.red(),
                                description=f"{ctx.author.mention} —É–¥–∞–ª–∏–ª(–∞) –∑–∞–º–µ—Ç–∫—É {' '.join(notes_number)} "
                                            f"–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user.mention}:\n")
            log.add_field(name="", value="\n".join(deleted_notes))

            log_channel = ctx.guild.get_channel(channel_id)
            await log_channel.send(embed=log)

        embed = disnake.Embed(title="", color=disnake.Color.green(),
                              description=f"–ó–∞–º–µ—Ç–∫–∞ {' '.join(notes_number)} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} —É–¥–∞–ª–µ–Ω–∞:\n")
        embed.add_field(name="", value="\n".join(deleted_notes), inline=False)
        embed.add_field(name="", value="‚ùó–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –∂—É—Ä–Ω–∞–ª–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–µ—Ç–æ–∫",
                        inline=False)
        await ctx.send(embed=embed, ephemeral=True)


def setup(bot):
    bot.add_cog(Journal(bot))
